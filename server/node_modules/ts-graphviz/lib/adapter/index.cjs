'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var node_fs = require('node:fs');
var node_stream = require('node:stream');
var node_util = require('node:util');
var node_child_process = require('node:child_process');

/**
 * @module ts-graphviz/adapter
 * @beta
 */
function commandBuilder({ dotCommand = 'dot', suppressWarnings = true, format = 'svg' } = {}) {
  const args = [
    ...(function* () {
      if (suppressWarnings) yield '-q';
      yield `-T${format}`;
    })(),
  ];
  return [dotCommand, args];
}
/**
 * NOTE:
 * The node:stream/promises standard module is not provided in Node 14.
 * Fix Node 14 to use node:stream/promises after LTS ends.
 */
const pipeline = node_util.promisify(node_stream.pipeline);
/**
 * Execute the Graphviz dot command and make a Stream of the results.
 */
async function toStream(dot, options) {
  const [command, args] = commandBuilder(options);
  const p = node_child_process.spawn(command, args, { stdio: 'pipe' });
  await pipeline(node_stream.Readable.from([dot]), p.stdin);
  return p.stdout;
}
/**
 * Execute the Graphviz dot command and output the results to a file.
 */
async function toFile(dot, path, options) {
  const stream = await toStream(dot, options);
  await pipeline(stream, node_fs.createWriteStream(path));
}

exports.toFile = toFile;
exports.toStream = toStream;
